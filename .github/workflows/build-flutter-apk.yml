name: build apk

on:
  workflow_dispatch:
    inputs:
      repo-url:
        description: 'git clone url'
        required: true
      repo-commit:
        description: 'commit'
      repo-dir:
        description: 'dir ("/..")'
      module:
        description: 'module'
        required: true
        default: 'app'
      flutter-project:
        type: boolean
        description: 'flutter project'
        default: 'false'
      googleservices:
        description: 'google-services.json (content)'
      localproperties:
        description: 'local.properties (content)'
      sign:
        type: boolean
        description: 'sign apk'
        default: 'false'

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
        
      - name: clone
        run: |
          git clone ${{ github.event.inputs.repo-url }}
          echo "projectName=$(basename -s .git ${{ github.event.inputs.repo-url }})" >> $GITHUB_ENV
          echo "dirName=$(echo ${{ github.event.inputs.repo-dir }} | sed -r 's/[/]+/ - /g')" >> $GITHUB_ENV
        
      - name: select commit
        if: ${{ github.event.inputs.repo-commit != '' }}
        run: |
          cd ${{ env.projectName }}
          git checkout ${{ github.event.inputs.repo-commit }}
          
      - name: add google-services.json
        if: ${{ github.event.inputs.googleservices != '' }}
        run: |
          content=$(jq -r '.inputs.googleservices' $GITHUB_EVENT_PATH)
          echo "::add-mask::$content"
          echo "$content" > ${{ env.projectName }}${{ github.event.inputs.repo-dir }}/${{ github.event.inputs.module }}/google-services.json
        
      - name: add local.properties
        if: ${{ github.event.inputs.localproperties != '' }}
        run: |
          content=$(jq -r '.inputs.localproperties' $GITHUB_EVENT_PATH)
          echo "::add-mask::$content"
          echo "$content" > ${{ env.projectName }}${{ github.event.inputs.repo-dir }}/local.properties
        
      - name: setup
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: 11
          cache: "gradle"

      - name: flutter-project
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.x'
          channel: 'any'
          
      - name: build
        if: ${{ github.event.inputs.sign == 'false' }}
        run: |
          cd ${{ env.projectName }}${{ github.event.inputs.repo-dir }}
          chmod +x gradlew
          ./gradlew ${{ github.event.inputs.module }}:assembleDebug
         
      - name: build & sign
        if: ${{ github.event.inputs.sign == 'true' }}
        run: |
          cd ${{ env.projectName }}${{ github.event.inputs.repo-dir }}
          chmod +x gradlew
          ./gradlew ${{ github.event.inputs.module }}:assembleRelease -Pandroid.injected.signing.store.file='${{ github.workspace }}/grab-keystore.jks' -Pandroid.injected.signing.store.password='grab-pwd' -Pandroid.injected.signing.key.alias='sign' -Pandroid.injected.signing.key.password='grab-pwd'

      - name: flutter build
        if: ${{ github.event.inputs.flutter-project == 'true' }}
        run: |
          cd ${{ env.projectName }}${{ github.event.inputs.repo-dir }}
          flutter pub get
          flutter build apk

      - name: upload release
        uses: actions/upload-artifact@v2
        if: ${{ github.event.inputs.sign == 'true' }}
        with:
          name: ${{ env.projectName }}${{ env.dirName }} - ${{ github.event.inputs.module }}
          path: ${{ github.workspace }}/${{ env.projectName }}${{ github.event.inputs.repo-dir }}/${{ github.event.inputs.module }}/build/outputs/apk/release/*.apk 

      - name: upload debug
        uses: actions/upload-artifact@v2
        if: ${{ github.event.inputs.sign == 'false' }}
        with:
          name: ${{ env.projectName }}${{ env.dirName }} - ${{ github.event.inputs.module }}
          path: ${{ github.workspace }}/${{ env.projectName }}${{ github.event.inputs.repo-dir }}/${{ github.event.inputs.module }}/build/outputs/apk/debug/*.apk
      
      - name: upload flutter debug
        uses: actions/upload-artifact@v2
        if: ${{ github.event.inputs.flutter-project == 'true' }}
        with:
          name: ${{ env.projectName }}${{ env.dirName }} - ${{ github.event.inputs.module }}
          path: ${{ github.workspace }}/${{ env.projectName }}${{ github.event.inputs.repo-dir }}/${{ github.event.inputs.module }}/android/build/outputs/apk/debug/*.apk
      
